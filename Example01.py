"""Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: см. в методичке.

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д."""

# Определение класса Matrix
class Matrix:
    # Перегрузка конструктора матрицы - объекта класса Matrix
    def __init__(self, matrix: list):
        self.matrix = matrix
    # Перегрузка метода str() для вывода матрицы в привычном виде
    def __str__(self):
        return '\n'.join('  '.join(map(str, row)) for row in self.matrix)
    # Перегрузка метода add() для реализации операции сложения двух матриц
    def __add__(self, matrix_A, matrix_B):
        sum = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
        result = []
        for i in range(len(matrix_A)):
            for j in range(len(matrix_A[0])):
                sum[i][j] = matrix_A[i][j] + matrix_B[i][j]
        return sum
# Создание объекта matr_1 класса Matrix
matr_1 = Matrix([[1, 2, 3], [1, 3, 5], [5, 3, 6]])
print(matr_1.matrix)
print(matr_1.__str__())
# Создание объекта matr_2 класса Matrix
matr_2 = Matrix([[1, 2, 3], [3, 2, 1], [4, 6, 8]])
print(matr_2.matrix)
print(matr_2.__str__())
# Создание объекта matr_3 класса Matrix - пустая матрица, которая заполнится элементами из сумм элементов матриц matr_1  matr_2
matr_3 = Matrix([[],[],[]])
print(matr_3.matrix)
sum = Matrix(matr_3.__add__(matr_1.matrix, matr_2.matrix))
print(sum.__str__())
